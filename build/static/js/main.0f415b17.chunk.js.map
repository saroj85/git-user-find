{"version":3,"sources":["Component/loder.gif","Action/index.js","Component/Layout/Nav.js","Component/User/UserCard.js","Component/Layout/Spinner.js","Component/User/User.js","Component/User/Repos/RepoItem.js","Component/User/Repos/Repos.js","Component/User/SingleUser.js","Component/User/Search.js","Component/Pages/about.js","Component/Layout/Alert.js","Component/Grid/Grid.js","Component/Pages/admin.js","Component/Auth/Login.js","App.js","Reducer/GetAlluser.js","store.js","serviceWorker.js","index.js"],"names":["module","exports","base_URL","getUsersNew","dispatch","fetch","then","res","json","res2","type","payload","loading","Nav","icon","className","href","aria-hidden","sessionStorage","getItem","onClick","removeItem","defaultProps","UserCard","props","state","num","this","user","avatar_url","img_alt","login","html_url","src","alt","style","width","to","Component","Spinner","textAlign","SpinnerImg","margin","User","users","console","log","map","index","key","id","RepoItem","repo","branches_url","name","connect","repos","length","getSingleUser","username","process","match","useState","params","useEffect","url","company","location","bio","hireable","public_repos","public_gists","followers","following","created_at","updated_at","searchUsers","text","items","clearUsers","SearchUser","NewsetAlert","showClear","clearUser","setText","placholder","onChange","event","target","value","autoComplete","e","preventDefault","about","Alert","alert","msg","Row","styled","div","align","justify","direction","Column","xs","span","getWidthString","loader","isLogin","setAlert","setTimeout","Login","OnChange","setState","onSubmit","email","password","data","method","headers","body","JSON","stringify","response","localStorage","setItem","token","apiToken","islogin","for","exact","path","render","iState","Reducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","ReduxThunk","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f415b17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loder.75ae2ba2.gif\";","\nconst base_URL = 'https://api.github.com';\n\n// get all users\n\nexport const getUsersNew = () => dispatch => fetch(`${base_URL}/users`) .then(res => res.json()).then((res2) => dispatch({type: 'GET_USERS', payload: res2, loading: false}))\n\n// search users\n\nexport const searchUsers = (text) => dispatch => {\n    fetch(`${base_URL}/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n        .then(res => res.json()).then(res2 => dispatch({type: 'SEARCH_USERS',payload: res2.items}))\n}\n\n// get single user \n\nexport const getSingleUser = (username) => dispatch => {\n    fetch(`${base_URL}/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n        .then(res => res.json()).then(res2 => dispatch({type: 'GET_SIGNLE_USER',payload: res2}));\n\n// get all repos \n\n    fetch(`${base_URL}/users/${username}/repos?pre_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n        .then(res => res.json()).then(res2 => dispatch({type: 'GET_SIGNLE_USER_REPOS',payload: res2}))\n};\n\n// clear users\n\nexport const clearUsers = () => dispatch => {\n    dispatch({type: 'SEARCH_USERS',payload: []})\n}\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Nav = ({ icon }) => {\n\n\n    return (\n        <div>\n            <div className=\"header\">\n                <div className=\"logo\"><a href=\"/\"><i className={icon} aria-hidden=\"true\"></i></a></div>\n                <ul>\n                    <li><a href=\"/\">Home</a></li>\n                    <li><a href=\"/about\">About</a></li>\n                    {\n                        sessionStorage.getItem(\"token\") ? <li onClick={\n                            sessionStorage.removeItem(\"token\")\n                        }><a >Logout</a></li> : <li><a href=\"/login\">Login</a></li>\n\n                    }\n                </ul>\n            </div>\n        </div>\n    );\n\n}\n\nNav.defaultProps = {\n    icon: \"fa fa-github\"\n}\nNav.propTypes = {\n    icon: PropTypes.string.isRequired\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass UserCard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            num: 0\n        }\n    }\n    render() {\n        const { avatar_url, img_alt, html_url, login } = this.props.user;\n        return (\n            <div className=\"user_card\">\n                <img src={avatar_url} alt={img_alt} style={{ width: '70px' }} />\n                <h3>{login}</h3>\n                <div className=\"btn btn_primary\">\n                    <Link to={`/user/${login}`}>More</Link>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default UserCard;\n\n\n","import React from 'react';\nimport SpinnerImg from '../loder.gif'\n\nconst Spinner = () => {\n    return (\n       <div style={{textAlign:'center'}}>\n            <img src={SpinnerImg} style={{ width: '50px', margin: 'auto' }} />\n       </div>\n\n    );\n};\n\n\nexport default Spinner;","import React from 'react';\nimport UserCard from './UserCard';\nimport Spinner from '../Layout/Spinner';\nimport PropTypes from 'prop-types';\n\n\nconst User = ({ users, loading }) => {\n    console.log(\"users\", users)\n    if (loading) return  <Spinner />\n    else {\n        return (\n            <div className=\"card_row\">\n                {users && users.map((user, index) => <UserCard key={user.id} user={user} />)}\n            </div>\n        );\n    }\n\n}\n\n// User.propTypes = {\n//     users : PropTypes.array.isRequired,\n//     loading : propTypes.bool.isRequired\n// }\nexport default User;","import React  from 'react';\n\nconst RepoItem = ({repo}) => {\n        return (\n           <div className=\"repos_card\">\n              <h3><a href={repo.branches_url}> {repo.name}</a></h3>\n           </div>\n        );\n    \n}\n\nexport default RepoItem; ","import React from 'react';\nimport ReposItem from './RepoItem';\nimport { connect } from 'react-redux';\n\n\nconst Repos = (props) => {\n    const repos = props.repo;\n    return repos.length > 0 && repos.map((repo) => <ReposItem repo={repo} key={repo.id} />)\n}\n\n\n\nconst mapStateFromProps = (state) => {\n    return {\n        repo: state.repos\n    }\n}\n\n\nexport default connect(mapStateFromProps)(Repos);\n\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getSingleUser } from '../../Action/index';\nimport Repos from './Repos/Repos';\n\nconst SingleUser = (props) => {\n    const {match} = props;\n    const [log, setlogin] = useState(match.params.login)\n\n    useEffect(() => {\n        props.getSingleUser(log)\n    }, []);\n\n    const {\n        login,\n        avatar_url,\n        url,\n        html_url,\n        name,\n        company,\n        location,\n        bio,\n        public_repos,\n        public_gists,\n        followers,\n        following,\n        created_at,\n        updated_at,\n        hireable,\n    } = props.user;\n\n    return (\n        <div className='single_user_card'>\n            <img src={avatar_url} style={{ width: '70px' }} />\n            <div>\n                <i className={`fa fa-check-circle-o ${hireable ? \"green\" : \"red\"}`} aria-hidden=\"true\"></i>\n            </div>\n            <h1>{name}</h1>\n            <p>Bio :{bio}</p>\n            <p>Location :{location}</p>\n            <p>Comapny Name:{company}</p>\n            <Repos/>\n        </div>\n    );\n\n}\n\nconst mapStateFromProps = (state) => {\n    return {\n        user: state.user\n    }\n}\nexport default connect(mapStateFromProps, { getSingleUser })(SingleUser);","import React, { useState } from 'react';\nimport { searchUsers, clearUsers } from '../../Action';\nimport { connect } from 'react-redux';\n\nconst Search = (props) => {\n    const { SearchUser, NewsetAlert, showClear, clearUser } = props;\n    const [text, setText] = useState(\"\");\n    const handlerChange = (event) => setText(event.target.value);\n    const submit = (e) => {\n        e.preventDefault();\n        if (text === \"\") {\n            NewsetAlert(\"please Enter Somthing\", 'light', 'fa-info-circle');\n        }\n        else {\n            props.searchUsers(text);\n            setText(\"\");\n        }\n    }\n    return (\n        <div className=\"input_search_main\">\n            <input\n                type=\"text\"\n                name=\"text\"\n                placholder=\"Search User\"\n                className=\"input_search\"\n                onChange={handlerChange}\n                value={text}\n                autoComplete=\"off\"\n            />\n            <input type=\"button\" className=\"btn search_btn\" value=\"search\" onClick={submit} />\n            {showClear && <button onClick={() => props.clearUsers()} className=\"btn clr_btn\">Clear User</button>}\n\n        </div>\n    );\n}\n\nconst mapStatetoProps = state => {\n    return {\n        users: state.users\n    }\n}\n\nexport default connect(mapStatetoProps, { searchUsers, clearUsers })(Search);","import React, { Component } from 'react';\n\nconst about=() => {\n        return (\n            <div className=\"container\">\n                <h1>Github Finder </h1>\n                <p>Verson : 0.0.1</p>\n            </div>\n        );\n}\n\nexport default about;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Alert = ({ alert }) => {\n    return (\n        alert !== null && (\n            <div className={`alert alert-${alert.type}`}>\n                <i className={`fa ${alert.icon}`}></i>\n                {alert.msg}\n            </div>\n        )\n    );\n}\n\nAlert.propTypes = {\n    alert : PropTypes.object.isRequired\n}\n\nexport default Alert;","import styled from 'styled-components';\n\n\nexport const Row = styled.div`\n    width : '100%';\n    display: flex;\n    align-items: ${props => props.align ? props.align : 'center'};\n    justify-content: ${props => props.justify ? props.justify : 'space-between'};\n    margin: ${props => props.margin ? props.margin : 'auto'};\n    flex-direction: ${props => props.direction ? props.direction : 'row'};\n`;\n\nfunction getWidthString(span) {\n    if (!span) return;\n    let width = span / 12 * 100;\n    return `width: ${width}%`;\n\n}\nexport const Column = styled.div`\n    ${({ xs }) => (xs ? getWidthString(xs) : 'width: 100%')};\n    background: red;\n    height: 100px;\n\n`;\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getUsersNew } from '../../Action/index';\nimport User from '../../Component/User/User';\nimport Search from '../../Component/User/Search';\nimport Alert from '../../Component/Layout/Alert';\nimport { Redirect } from 'react-router-dom';\nimport {Row, Column } from '../Grid/Grid';\n\n\n\nconst Admin = (props) => {\n    console.log(\"loader\", props.loader)\n    const [alert, setAlert] = useState(null);\n\n    useEffect(() => {\n        // if(!localStorage.getItem(\"token\")){\n        //    return  props.history.push(\"/login\")\n        // }\n\n        props.getUsersNew()\n    }, [])\n\n\n    const NewsetAlert = (msg, type, icon) => {\n        setAlert({ msg, type, icon })\n        setTimeout(() => setAlert({ alert: null }), 3000)\n    }\n\n    // sessionStorage.getItem(\"token\") ?  null : <Redirect to='/login' />\n    console.log(\"token\", props)\n   \n\n    return (\n       \n        <div>\n            <Row>\n                <Column xs=\"2\" ></Column>\n                <Column xs=\"2\" ></Column>\n            </Row>\n            \n            <div className=\"container\">\n                <Alert alert={alert} />\n                <Search\n                    showClear={true}\n                    showClear={props.users.length > 0 ? true : false}\n                    NewsetAlert={NewsetAlert}\n                />\n            </div>\n            <User users={props.users} />\n        </div>\n    );\n\n}\n\nconst mapStatetoProps = state => {\n    return {\n        users: state.users,\n        loader: state.loading,\n        isLogin: state.isLogin\n    }\n}\nexport default connect(mapStatetoProps, { getUsersNew })(Admin);","import React, { Component } from 'react';\nimport Admin from '../Pages/admin';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: 'saroj@852131',\n            islogin: false,\n            apiToken: \"\"\n\n        }\n    }\n\n    OnChange = (e) => this.setState({ [e.target.name]: e.target.value })\n\n    onSubmit = (e) => {\n        // e.preventdefault();\n        const { email, password } = this.state;\n        if (email.length > 5 && password.length > 3) {\n            const data = {\n                email: email,\n                password: password,\n            }\n            // this.setState({\n            //     lsLogin : true\n            // })\n            // sessionStorage.setItem(\"token\", \"abcdefghijklmnopqrstuvwxyz\");\n\n            fetch('http://localhost:5000/api/user/login', {\n\n                method: 'POST',\n                headers: {\n                    //'Access-Control-Allow-Credentials' : true,\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Request-Headers': '*',\n                    'Content-Type': 'application/json',\n\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify(data),\n            })\n                .then(response => response.json())\n                .then(json =>\n                    localStorage.setItem(\"token\", json.token),\n                    // this.props.location.push(\"/admin\")\n                    // console.log(\"admin\", props)\n                    this.setState({\n                        apiToken: localStorage.getItem(\"token\")\n                    }, function () {\n                        debugger;\n                        // if (localStorage.getItem(\"token\")) return this.props.history.push(\"/admin\")\n                    })\n\n\n\n                )\n\n\n\n            // fetch(\"http://localhost:5000/api/user/login\", {\n            //     method: 'GET', \n            //     body: {\n            //         \"email\" : \"send4saroj@gmail\",\n            //         \"password\" : \"saroj@852131\"\n            //     }\n            // })\n            //     .then(res => {\n            //         console.log(\"res1\", res)\n            //     })\n\n\n        }\n    }\n\n\n\n    render() {\n        console.log(\"login\", this.props)\n\n        return (\n            <div className='login'>\n                <h1 className=\"login_title\">Login {this.state.apiToken}</h1>\n                <div>\n                    <label for='email'>Email</label>\n                    <input className=\"form-control\" type='email' name=\"email\" value={this.state.email} onChange={this.OnChange} />\n                    <br></br>\n                    <label for='password'>Password</label>\n                    <input className=\"form-control\" type='text' name=\"password\" value={this.state.password} onChange={this.OnChange} />\n                    <br></br>\n                    <button className=\"submit_btn\" onClick={this.onSubmit}>Login</button>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getUsersNew } from './Action/index.js';\nimport '../src/App.css'\nimport Nav from './Component/Layout/Nav';\nimport User from './Component/User/User';\nimport SingleUser from './Component/User/SingleUser';\nimport Search from './Component/User/Search';\nimport About from './Component/Pages/about';\nimport Alert from './Component/Layout/Alert';\nimport Spinner from './Component/Layout/Spinner';\nimport Login from './Component/Auth/Login';\nimport Admin from './Component/Pages/admin';\n\nconst App = (props) => {\n  console.log(\"loader\", props.loader)\n  const [alert, setAlert] = useState(null);\n\n  useEffect(() => {\n    props.getUsersNew()\n  }, [])\n\n\n  const NewsetAlert = (msg, type, icon) => {\n    setAlert({ msg, type, icon })\n    setTimeout(() => setAlert({ alert: null }), 3000)\n  }\n\n\n  return (\n    <Router>\n      <Nav icon={\"fa fa-github\"} />\n      {props.loader ? <Spinner /> : null}\n      \n\n      <Switch>\n        {/* <Route exact path=\"/\">\n          <div className=\"container\">\n            <Alert alert={alert} />\n            <Search\n              showClear={true}\n              showClear={props.users.length > 0 ? true : false}\n              NewsetAlert={NewsetAlert}\n            />\n          </div>\n          <User users={props.users} />\n        </Route> */}\n\n\n        \n        <Route exact path=\"/user/:login\" render={props => (<SingleUser {...props} />)} />\n        \n        <Route exact path=\"/about\"> <About /></Route>\n        <Route exact path=\"/login\" render={props => (<Login {...props}/>)}/>\n        {/* <Route exact path=\"/login\"> <Login/></Route> */}\n        <Route exact path=\"/\" render={props => (<Admin {...props}/>)}/>\n      </Switch>\n    </Router>\n  );\n\n}\n\nconst mapStatetoProps = state => {\n  return {\n    users: state.users,\n    loader: state.loading,\n    isLogin: state.isLogin\n  }\n}\nexport default connect(mapStatetoProps, { getUsersNew })(App);","\nconst iState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: true,\n    isLogin: false\n}\n\nconst Reducer = (state = iState, action) => {\n    switch (action.type) {\n        case 'GET_USERS':\n            return {\n                ...state,\n                users: action.payload,\n                loading: false,\n            }\n        case 'SEARCH_USERS':\n            return {\n                ...state,\n                users: action.payload,\n                loading: false,\n            }\n        case 'GET_SIGNLE_USER':\n            return {\n                ...state,\n                user: action.payload,\n                loading: false,\n            }\n\n        case 'GET_SIGNLE_USER_REPOS':\n            return {\n                ...state,\n                repos: action.payload,\n                loading: false,\n            }\n\n        case 'CLEAR_USERS':\n            return {\n                ...state,\n                users: action.payload,\n                loading: false,\n            }\n\n        default:\n            return state\n    }\n}\nexport default Reducer;\n\n\n\n\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport reducer from './Reducer/GetAlluser.js';\nimport ReduxThunk from 'redux-thunk';\n\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// const store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\n\nexport const store = createStore(reducer, composeEnhancers(applyMiddleware(ReduxThunk)));\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}